@using AlbumReviews.ViewModels;
@using AlbumReviews.Services;
@model PaginatedList<AlbumViewModel>

<div class="search-container" style="text-align: right;">
    <form method="get" asp-action="All" class="search-form">
        <input type="text" name="searchString" placeholder="Search by title or artist..." value="@ViewData["CurrentFilter"]" />
        <button type="submit"><i class="fa fa-search"></i></button>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th class="white-text">
                <a asp-action="All" asp-route-sortOrder="@ViewData["TitleSortParam"]">@Html.DisplayNameFor(model => model[0].Title)</a>
            </th>
            <th class="white-text">Album Cover</th>
            <th class="white-text">
                <a asp-action="All" asp-route-sortOrder="@ViewData["ArtistSortParam"]">@Html.DisplayNameFor(model => model[0].Artist)</a>
            </th>
            <th class="white-text">Release Year</th>
            <th class="white-text">Genre</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var album in Model)
        {
            <tr>
                <td class="white-text">
                    <a asp-controller="Review" asp-action="Index" asp-route-albumId="@album.AlbumId">@album.Title</a>
                </td>
                <td>
                    <img src="@album.Cover" alt="Album Cover" style="width: 50px; height: 50px; margin-right: 10px;" />
                </td>
                <td class="white-text">@album.Artist</td>
                <td class="white-text">@album.ReleaseDate</td>
                <td class="white-text">@album.Genre</td>
                <td>
                    <a asp-controller="Review" asp-action="Index" asp-route-albumId="@album.AlbumId" class="btn btn-primary">Reviews</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="All" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="All" asp-route-pageNumber="@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="All" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>
